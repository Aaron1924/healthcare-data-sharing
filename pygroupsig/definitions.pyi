from pygroupsig.interfaces import KeyInterface as KeyInterface, SchemeInterface as SchemeInterface
from pygroupsig.klap20.scheme import Klap20 as Klap20

class Scheme(SchemeInterface):
    _SCHEMES: dict[str, Scheme]
    scheme: Scheme
    def __init__(self, scheme: str) -> None: ...
    def _get_scheme(self, scheme: str) -> SchemeInterface: ...
    def setup(self) -> None: ...
    def join_mem(self, phase: int, message: dict[str, str] | None = None) -> dict[str, str] | bool | None: ...
    def join_mgr(self, phase: int, message: dict[str, str] | None = None) -> dict[str, str] | None: ...

class Key(KeyInterface):
    _KEYS: dict[str, dict[str, Key]]
    key: Key
    def __init__(self, scheme: str, ktype: str) -> None: ...
    def _get_key(self, scheme: str, ktype: str) -> KeyInterface: ...


class OpenMixin: ...
class OVerifyMixin: ...
class RevealTraceClaimCVerifyProveEqPEqVerifyMixin: ...
class BlindConvertUnblindMixin: ...
class IdentifyLinkLVerifyMixin: ...
class SeqlinkSVerifyMixin: ...
