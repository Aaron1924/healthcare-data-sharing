from abc import ABCMeta, abstractmethod

class SchemeInterface(metaclass=ABCMeta):
    @abstractmethod
    def setup(self) -> None: ...
    @abstractmethod
    def join_mem(self, phase: int, message: dict[str, str] | None = None) -> dict[str, str] | bool | None: ...
    @abstractmethod
    def join_mgr(self, phase: int, message: dict[str, str] | None = None) -> dict[str, str] | None: ...

class KeyInterface(metaclass=ABCMeta): ...
